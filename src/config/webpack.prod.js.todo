// Based on https://github.com/keokilee/react-typescript-boilerplate

var webpack = require('webpack');
var path = require('path');
var ExtractTextPlugin = require('extract-text-webpack-plugin');
var HtmlWebpackPlugin = require('html-webpack-plugin');

var APP_DIR = path.join(__dirname, '..', 'app');
var BUILD_DIR = path.join(__dirname, '..', '..', 'build');

module.exports = {
  devtool: 'eval-source-map',
  entry: './app/index.tsx',
  module: {
    preLoaders: [{
      test: /\.tsx?$/,
      loader: 'tslint',
      include: APP_DIR
    }],
    loaders: [
      {
        test: /\.tsx?$/,
        loaders: ['babel?optional=runtime', 'awesome-typescript-loader'],
        include: APP_DIR
      },
      // Component SASS should go through the react-css-modules renaming pipeline to make it component-local
      {
        test: /.*scss\/components\/.*\.scss$/,
        loader: ExtractTextPlugin.extract('style', 'css?modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]!sass')
      },
      // Other SASS e.g. bootstrap should be global
      {
        test: /.*scss\/global\/.*\.scss$/,
        loader: ExtractTextPlugin.extract('style', 'css!sass')
      },
      {
        test: /\.png|.gif?$/,
        loader: "file-loader"
      },
      {
        test: /\.woff\d?(\?v=[0-9]\.[0-9]\.[0-9])?$/,
        loader: "url-loader?limit=10000&minetype=application/font-woff"
      },
      {
        test: /\.(ttf|eot|svg)(\?v=[0-9]\.[0-9]\.[0-9])?$/,
        loader: "file-loader"
      }
    ]
  },
  output: {
    filename: 'bundle.js',
    path: BUILD_DIR,
    publicPath: '/'
  },
  plugins: [
    new webpack.optimize.OccurenceOrderPlugin(),
    new webpack.DefinePlugin({
      'process.env': {
        'NODE_ENV': JSON.stringify('production')
      }
    }),
    new webpack.optimize.UglifyJsPlugin({
      compressor: {
        warnings: false
      }
    }),
    new ExtractTextPlugin(path.join("styles.css")),
    new HtmlWebpackPlugin({
      favicon: 'assets/images/favicon.ico',
      template: 'assets/html/index.html',
      title: 'Skeleton',
      inject: 'body'
    })
  ],
  resolve: {
    root: [path.resolve('../app')],
    extensions: ['', '.jsx', '.js', '.tsx', '.ts'],
    modulesDirectories: ['./src/app', 'node_modules'],
    alias: {
      // Redux Dev Tools tries to load another version of react, so force react to our version
      'react': path.join(APP_DIR, '..', 'node_modules', 'react'),
      // Load the appropriate app config
      'app-config': path.join(APP_DIR, 'config', 'prod.config.ts')
    }
  },
  tslint: {
    emitErrors: true,
    failOnHint: true
  }
};
